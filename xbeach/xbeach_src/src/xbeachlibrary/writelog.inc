  !  DO NOT EDIT THIS FILE
  !  But edit variables.f90 and scripts/generate.py
  !  Compiling and running is taken care of by the Makefile






subroutine writelog_a(destination, form, a_message_char1)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: a_message_char1
  if (trim(form)=='') then
    write(display,*)trim(a_message_char1)
  else
    write(display,form)trim(a_message_char1)
  endif
  ! this is the main subroutine that actual does the logging
  ! passing the trimmed version of display does not work.
  call writelog_distribute(destination, trim(display))
end subroutine writelog_a



subroutine writelog_afafafaf(destination, form, afafafaf_message_char1, afafafaf_message_float1, afafafaf_message_char2, afafafaf_message_float2, afafafaf_message_char3, afafafaf_message_float3, afafafaf_message_char4, afafafaf_message_float4)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: afafafaf_message_char1
  real*8, intent(in) :: afafafaf_message_float1
  character(*), intent(in) :: afafafaf_message_char2
  real*8, intent(in) :: afafafaf_message_float2
  character(*), intent(in) :: afafafaf_message_char3
  real*8, intent(in) :: afafafaf_message_float3
  character(*), intent(in) :: afafafaf_message_char4
  real*8, intent(in) :: afafafaf_message_float4
  if (trim(form)=='') then
    write(display,*)trim(afafafaf_message_char1), afafafaf_message_float1, trim(afafafaf_message_char2), afafafaf_message_float2, trim(afafafaf_message_char3), afafafaf_message_float3, trim(afafafaf_message_char4), afafafaf_message_float4
  else
    write(display,form)trim(afafafaf_message_char1), afafafaf_message_float1, trim(afafafaf_message_char2), afafafaf_message_float2, trim(afafafaf_message_char3), afafafaf_message_float3, trim(afafafaf_message_char4), afafafaf_message_float4
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_afafafaf



subroutine writelog_afaiaaa(destination, form, afaiaaa_message_char1, afaiaaa_message_float1, afaiaaa_message_char2, afaiaaa_message_int1, afaiaaa_message_char3, afaiaaa_message_char4, afaiaaa_message_char5)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: afaiaaa_message_char1
  real*8, intent(in) :: afaiaaa_message_float1
  character(*), intent(in) :: afaiaaa_message_char2
  integer, intent(in) :: afaiaaa_message_int1
  character(*), intent(in) :: afaiaaa_message_char3
  character(*), intent(in) :: afaiaaa_message_char4
  character(*), intent(in) :: afaiaaa_message_char5
  if (trim(form)=='') then
    write(display,*)trim(afaiaaa_message_char1), afaiaaa_message_float1, trim(afaiaaa_message_char2), afaiaaa_message_int1, trim(afaiaaa_message_char3), trim(afaiaaa_message_char4), trim(afaiaaa_message_char5)
  else
    write(display,form)trim(afaiaaa_message_char1), afaiaaa_message_float1, trim(afaiaaa_message_char2), afaiaaa_message_int1, trim(afaiaaa_message_char3), trim(afaiaaa_message_char4), trim(afaiaaa_message_char5)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_afaiaaa



subroutine writelog_aaafaf(destination, form, aaafaf_message_char1, aaafaf_message_char2, aaafaf_message_char3, aaafaf_message_float1, aaafaf_message_char4, aaafaf_message_float2)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aaafaf_message_char1
  character(*), intent(in) :: aaafaf_message_char2
  character(*), intent(in) :: aaafaf_message_char3
  real*8, intent(in) :: aaafaf_message_float1
  character(*), intent(in) :: aaafaf_message_char4
  real*8, intent(in) :: aaafaf_message_float2
  if (trim(form)=='') then
    write(display,*)trim(aaafaf_message_char1), trim(aaafaf_message_char2), trim(aaafaf_message_char3), aaafaf_message_float1, trim(aaafaf_message_char4), aaafaf_message_float2
  else
    write(display,form)trim(aaafaf_message_char1), trim(aaafaf_message_char2), trim(aaafaf_message_char3), aaafaf_message_float1, trim(aaafaf_message_char4), aaafaf_message_float2
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aaafaf



subroutine writelog_aafaf(destination, form, aafaf_message_char1, aafaf_message_char2, aafaf_message_float1, aafaf_message_char3, aafaf_message_float2)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aafaf_message_char1
  character(*), intent(in) :: aafaf_message_char2
  real*8, intent(in) :: aafaf_message_float1
  character(*), intent(in) :: aafaf_message_char3
  real*8, intent(in) :: aafaf_message_float2
  if (trim(form)=='') then
    write(display,*)trim(aafaf_message_char1), trim(aafaf_message_char2), aafaf_message_float1, trim(aafaf_message_char3), aafaf_message_float2
  else
    write(display,form)trim(aafaf_message_char1), trim(aafaf_message_char2), aafaf_message_float1, trim(aafaf_message_char3), aafaf_message_float2
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aafaf



subroutine writelog_afaaa(destination, form, afaaa_message_char1, afaaa_message_float1, afaaa_message_char2, afaaa_message_char3, afaaa_message_char4)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: afaaa_message_char1
  real*8, intent(in) :: afaaa_message_float1
  character(*), intent(in) :: afaaa_message_char2
  character(*), intent(in) :: afaaa_message_char3
  character(*), intent(in) :: afaaa_message_char4
  if (trim(form)=='') then
    write(display,*)trim(afaaa_message_char1), afaaa_message_float1, trim(afaaa_message_char2), trim(afaaa_message_char3), trim(afaaa_message_char4)
  else
    write(display,form)trim(afaaa_message_char1), afaaa_message_float1, trim(afaaa_message_char2), trim(afaaa_message_char3), trim(afaaa_message_char4)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_afaaa



subroutine writelog_aafa(destination, form, aafa_message_char1, aafa_message_char2, aafa_message_float1, aafa_message_char3)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aafa_message_char1
  character(*), intent(in) :: aafa_message_char2
  real*8, intent(in) :: aafa_message_float1
  character(*), intent(in) :: aafa_message_char3
  if (trim(form)=='') then
    write(display,*)trim(aafa_message_char1), trim(aafa_message_char2), aafa_message_float1, trim(aafa_message_char3)
  else
    write(display,form)trim(aafa_message_char1), trim(aafa_message_char2), aafa_message_float1, trim(aafa_message_char3)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aafa



subroutine writelog_aaaf(destination, form, aaaf_message_char1, aaaf_message_char2, aaaf_message_char3, aaaf_message_float1)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aaaf_message_char1
  character(*), intent(in) :: aaaf_message_char2
  character(*), intent(in) :: aaaf_message_char3
  real*8, intent(in) :: aaaf_message_float1
  if (trim(form)=='') then
    write(display,*)trim(aaaf_message_char1), trim(aaaf_message_char2), trim(aaaf_message_char3), aaaf_message_float1
  else
    write(display,form)trim(aaaf_message_char1), trim(aaaf_message_char2), trim(aaaf_message_char3), aaaf_message_float1
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aaaf



subroutine writelog_afafa(destination, form, afafa_message_char1, afafa_message_float1, afafa_message_char2, afafa_message_float2, afafa_message_char3)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: afafa_message_char1
  real*8, intent(in) :: afafa_message_float1
  character(*), intent(in) :: afafa_message_char2
  real*8, intent(in) :: afafa_message_float2
  character(*), intent(in) :: afafa_message_char3
  if (trim(form)=='') then
    write(display,*)trim(afafa_message_char1), afafa_message_float1, trim(afafa_message_char2), afafa_message_float2, trim(afafa_message_char3)
  else
    write(display,form)trim(afafa_message_char1), afafa_message_float1, trim(afafa_message_char2), afafa_message_float2, trim(afafa_message_char3)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_afafa



subroutine writelog_afaf(destination, form, afaf_message_char1, afaf_message_float1, afaf_message_char2, afaf_message_float2)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: afaf_message_char1
  real*8, intent(in) :: afaf_message_float1
  character(*), intent(in) :: afaf_message_char2
  real*8, intent(in) :: afaf_message_float2
  if (trim(form)=='') then
    write(display,*)trim(afaf_message_char1), afaf_message_float1, trim(afaf_message_char2), afaf_message_float2
  else
    write(display,form)trim(afaf_message_char1), afaf_message_float1, trim(afaf_message_char2), afaf_message_float2
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_afaf



subroutine writelog_afa(destination, form, afa_message_char1, afa_message_float1, afa_message_char2)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: afa_message_char1
  real*8, intent(in) :: afa_message_float1
  character(*), intent(in) :: afa_message_char2
  if (trim(form)=='') then
    write(display,*)trim(afa_message_char1), afa_message_float1, trim(afa_message_char2)
  else
    write(display,form)trim(afa_message_char1), afa_message_float1, trim(afa_message_char2)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_afa



subroutine writelog_aaf(destination, form, aaf_message_char1, aaf_message_char2, aaf_message_float1)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aaf_message_char1
  character(*), intent(in) :: aaf_message_char2
  real*8, intent(in) :: aaf_message_float1
  if (trim(form)=='') then
    write(display,*)trim(aaf_message_char1), trim(aaf_message_char2), aaf_message_float1
  else
    write(display,form)trim(aaf_message_char1), trim(aaf_message_char2), aaf_message_float1
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aaf



subroutine writelog_iiiii(destination, form, iiiii_message_int1, iiiii_message_int2, iiiii_message_int3, iiiii_message_int4, iiiii_message_int5)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  integer, intent(in) :: iiiii_message_int1
  integer, intent(in) :: iiiii_message_int2
  integer, intent(in) :: iiiii_message_int3
  integer, intent(in) :: iiiii_message_int4
  integer, intent(in) :: iiiii_message_int5
  if (trim(form)=='') then
    write(display,*)iiiii_message_int1, iiiii_message_int2, iiiii_message_int3, iiiii_message_int4, iiiii_message_int5
  else
    write(display,form)iiiii_message_int1, iiiii_message_int2, iiiii_message_int3, iiiii_message_int4, iiiii_message_int5
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_iiiii



subroutine writelog_aiaiafa(destination, form, aiaiafa_message_char1, aiaiafa_message_int1, aiaiafa_message_char2, aiaiafa_message_int2, aiaiafa_message_char3, aiaiafa_message_float1, aiaiafa_message_char4)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aiaiafa_message_char1
  integer, intent(in) :: aiaiafa_message_int1
  character(*), intent(in) :: aiaiafa_message_char2
  integer, intent(in) :: aiaiafa_message_int2
  character(*), intent(in) :: aiaiafa_message_char3
  real*8, intent(in) :: aiaiafa_message_float1
  character(*), intent(in) :: aiaiafa_message_char4
  if (trim(form)=='') then
    write(display,*)trim(aiaiafa_message_char1), aiaiafa_message_int1, trim(aiaiafa_message_char2), aiaiafa_message_int2, trim(aiaiafa_message_char3), aiaiafa_message_float1, trim(aiaiafa_message_char4)
  else
    write(display,form)trim(aiaiafa_message_char1), aiaiafa_message_int1, trim(aiaiafa_message_char2), aiaiafa_message_int2, trim(aiaiafa_message_char3), aiaiafa_message_float1, trim(aiaiafa_message_char4)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aiaiafa



subroutine writelog_aiaiaf(destination, form, aiaiaf_message_char1, aiaiaf_message_int1, aiaiaf_message_char2, aiaiaf_message_int2, aiaiaf_message_char3, aiaiaf_message_float1)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aiaiaf_message_char1
  integer, intent(in) :: aiaiaf_message_int1
  character(*), intent(in) :: aiaiaf_message_char2
  integer, intent(in) :: aiaiaf_message_int2
  character(*), intent(in) :: aiaiaf_message_char3
  real*8, intent(in) :: aiaiaf_message_float1
  if (trim(form)=='') then
    write(display,*)trim(aiaiaf_message_char1), aiaiaf_message_int1, trim(aiaiaf_message_char2), aiaiaf_message_int2, trim(aiaiaf_message_char3), aiaiaf_message_float1
  else
    write(display,form)trim(aiaiaf_message_char1), aiaiaf_message_int1, trim(aiaiaf_message_char2), aiaiaf_message_int2, trim(aiaiaf_message_char3), aiaiaf_message_float1
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aiaiaf



subroutine writelog_aiaiaia(destination, form, aiaiaia_message_char1, aiaiaia_message_int1, aiaiaia_message_char2, aiaiaia_message_int2, aiaiaia_message_char3, aiaiaia_message_int3, aiaiaia_message_char4)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aiaiaia_message_char1
  integer, intent(in) :: aiaiaia_message_int1
  character(*), intent(in) :: aiaiaia_message_char2
  integer, intent(in) :: aiaiaia_message_int2
  character(*), intent(in) :: aiaiaia_message_char3
  integer, intent(in) :: aiaiaia_message_int3
  character(*), intent(in) :: aiaiaia_message_char4
  if (trim(form)=='') then
    write(display,*)trim(aiaiaia_message_char1), aiaiaia_message_int1, trim(aiaiaia_message_char2), aiaiaia_message_int2, trim(aiaiaia_message_char3), aiaiaia_message_int3, trim(aiaiaia_message_char4)
  else
    write(display,form)trim(aiaiaia_message_char1), aiaiaia_message_int1, trim(aiaiaia_message_char2), aiaiaia_message_int2, trim(aiaiaia_message_char3), aiaiaia_message_int3, trim(aiaiaia_message_char4)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aiaiaia



subroutine writelog_aiaiai(destination, form, aiaiai_message_char1, aiaiai_message_int1, aiaiai_message_char2, aiaiai_message_int2, aiaiai_message_char3, aiaiai_message_int3)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aiaiai_message_char1
  integer, intent(in) :: aiaiai_message_int1
  character(*), intent(in) :: aiaiai_message_char2
  integer, intent(in) :: aiaiai_message_int2
  character(*), intent(in) :: aiaiai_message_char3
  integer, intent(in) :: aiaiai_message_int3
  if (trim(form)=='') then
    write(display,*)trim(aiaiai_message_char1), aiaiai_message_int1, trim(aiaiai_message_char2), aiaiai_message_int2, trim(aiaiai_message_char3), aiaiai_message_int3
  else
    write(display,form)trim(aiaiai_message_char1), aiaiai_message_int1, trim(aiaiai_message_char2), aiaiai_message_int2, trim(aiaiai_message_char3), aiaiai_message_int3
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aiaiai



subroutine writelog_aiafaf(destination, form, aiafaf_message_char1, aiafaf_message_int1, aiafaf_message_char2, aiafaf_message_float1, aiafaf_message_char3, aiafaf_message_float2)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aiafaf_message_char1
  integer, intent(in) :: aiafaf_message_int1
  character(*), intent(in) :: aiafaf_message_char2
  real*8, intent(in) :: aiafaf_message_float1
  character(*), intent(in) :: aiafaf_message_char3
  real*8, intent(in) :: aiafaf_message_float2
  if (trim(form)=='') then
    write(display,*)trim(aiafaf_message_char1), aiafaf_message_int1, trim(aiafaf_message_char2), aiafaf_message_float1, trim(aiafaf_message_char3), aiafaf_message_float2
  else
    write(display,form)trim(aiafaf_message_char1), aiafaf_message_int1, trim(aiafaf_message_char2), aiafaf_message_float1, trim(aiafaf_message_char3), aiafaf_message_float2
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aiafaf



subroutine writelog_aiafa(destination, form, aiafa_message_char1, aiafa_message_int1, aiafa_message_char2, aiafa_message_float1, aiafa_message_char3)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aiafa_message_char1
  integer, intent(in) :: aiafa_message_int1
  character(*), intent(in) :: aiafa_message_char2
  real*8, intent(in) :: aiafa_message_float1
  character(*), intent(in) :: aiafa_message_char3
  if (trim(form)=='') then
    write(display,*)trim(aiafa_message_char1), aiafa_message_int1, trim(aiafa_message_char2), aiafa_message_float1, trim(aiafa_message_char3)
  else
    write(display,form)trim(aiafa_message_char1), aiafa_message_int1, trim(aiafa_message_char2), aiafa_message_float1, trim(aiafa_message_char3)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aiafa



subroutine writelog_aaaiai(destination, form, aaaiai_message_char1, aaaiai_message_char2, aaaiai_message_char3, aaaiai_message_int1, aaaiai_message_char4, aaaiai_message_int2)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aaaiai_message_char1
  character(*), intent(in) :: aaaiai_message_char2
  character(*), intent(in) :: aaaiai_message_char3
  integer, intent(in) :: aaaiai_message_int1
  character(*), intent(in) :: aaaiai_message_char4
  integer, intent(in) :: aaaiai_message_int2
  if (trim(form)=='') then
    write(display,*)trim(aaaiai_message_char1), trim(aaaiai_message_char2), trim(aaaiai_message_char3), aaaiai_message_int1, trim(aaaiai_message_char4), aaaiai_message_int2
  else
    write(display,form)trim(aaaiai_message_char1), trim(aaaiai_message_char2), trim(aaaiai_message_char3), aaaiai_message_int1, trim(aaaiai_message_char4), aaaiai_message_int2
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aaaiai



subroutine writelog_aaiai(destination, form, aaiai_message_char1, aaiai_message_char2, aaiai_message_int1, aaiai_message_char3, aaiai_message_int2)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aaiai_message_char1
  character(*), intent(in) :: aaiai_message_char2
  integer, intent(in) :: aaiai_message_int1
  character(*), intent(in) :: aaiai_message_char3
  integer, intent(in) :: aaiai_message_int2
  if (trim(form)=='') then
    write(display,*)trim(aaiai_message_char1), trim(aaiai_message_char2), aaiai_message_int1, trim(aaiai_message_char3), aaiai_message_int2
  else
    write(display,form)trim(aaiai_message_char1), trim(aaiai_message_char2), aaiai_message_int1, trim(aaiai_message_char3), aaiai_message_int2
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aaiai



subroutine writelog_aiai(destination, form, aiai_message_char1, aiai_message_int1, aiai_message_char2, aiai_message_int2)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aiai_message_char1
  integer, intent(in) :: aiai_message_int1
  character(*), intent(in) :: aiai_message_char2
  integer, intent(in) :: aiai_message_int2
  if (trim(form)=='') then
    write(display,*)trim(aiai_message_char1), aiai_message_int1, trim(aiai_message_char2), aiai_message_int2
  else
    write(display,form)trim(aiai_message_char1), aiai_message_int1, trim(aiai_message_char2), aiai_message_int2
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aiai



subroutine writelog_aiaaa(destination, form, aiaaa_message_char1, aiaaa_message_int1, aiaaa_message_char2, aiaaa_message_char3, aiaaa_message_char4)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aiaaa_message_char1
  integer, intent(in) :: aiaaa_message_int1
  character(*), intent(in) :: aiaaa_message_char2
  character(*), intent(in) :: aiaaa_message_char3
  character(*), intent(in) :: aiaaa_message_char4
  if (trim(form)=='') then
    write(display,*)trim(aiaaa_message_char1), aiaaa_message_int1, trim(aiaaa_message_char2), trim(aiaaa_message_char3), trim(aiaaa_message_char4)
  else
    write(display,form)trim(aiaaa_message_char1), aiaaa_message_int1, trim(aiaaa_message_char2), trim(aiaaa_message_char3), trim(aiaaa_message_char4)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aiaaa



subroutine writelog_aaai(destination, form, aaai_message_char1, aaai_message_char2, aaai_message_char3, aaai_message_int1)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aaai_message_char1
  character(*), intent(in) :: aaai_message_char2
  character(*), intent(in) :: aaai_message_char3
  integer, intent(in) :: aaai_message_int1
  if (trim(form)=='') then
    write(display,*)trim(aaai_message_char1), trim(aaai_message_char2), trim(aaai_message_char3), aaai_message_int1
  else
    write(display,form)trim(aaai_message_char1), trim(aaai_message_char2), trim(aaai_message_char3), aaai_message_int1
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aaai



subroutine writelog_aii(destination, form, aii_message_char1, aii_message_int1, aii_message_int2)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aii_message_char1
  integer, intent(in) :: aii_message_int1
  integer, intent(in) :: aii_message_int2
  if (trim(form)=='') then
    write(display,*)trim(aii_message_char1), aii_message_int1, aii_message_int2
  else
    write(display,form)trim(aii_message_char1), aii_message_int1, aii_message_int2
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aii



subroutine writelog_aai(destination, form, aai_message_char1, aai_message_char2, aai_message_int1)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aai_message_char1
  character(*), intent(in) :: aai_message_char2
  integer, intent(in) :: aai_message_int1
  if (trim(form)=='') then
    write(display,*)trim(aai_message_char1), trim(aai_message_char2), aai_message_int1
  else
    write(display,form)trim(aai_message_char1), trim(aai_message_char2), aai_message_int1
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aai



subroutine writelog_aaaa(destination, form, aaaa_message_char1, aaaa_message_char2, aaaa_message_char3, aaaa_message_char4)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aaaa_message_char1
  character(*), intent(in) :: aaaa_message_char2
  character(*), intent(in) :: aaaa_message_char3
  character(*), intent(in) :: aaaa_message_char4
  if (trim(form)=='') then
    write(display,*)trim(aaaa_message_char1), trim(aaaa_message_char2), trim(aaaa_message_char3), trim(aaaa_message_char4)
  else
    write(display,form)trim(aaaa_message_char1), trim(aaaa_message_char2), trim(aaaa_message_char3), trim(aaaa_message_char4)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aaaa



subroutine writelog_aaa(destination, form, aaa_message_char1, aaa_message_char2, aaa_message_char3)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aaa_message_char1
  character(*), intent(in) :: aaa_message_char2
  character(*), intent(in) :: aaa_message_char3
  if (trim(form)=='') then
    write(display,*)trim(aaa_message_char1), trim(aaa_message_char2), trim(aaa_message_char3)
  else
    write(display,form)trim(aaa_message_char1), trim(aaa_message_char2), trim(aaa_message_char3)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aaa



subroutine writelog_ai(destination, form, ai_message_char1, ai_message_int1)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: ai_message_char1
  integer, intent(in) :: ai_message_int1
  if (trim(form)=='') then
    write(display,*)trim(ai_message_char1), ai_message_int1
  else
    write(display,form)trim(ai_message_char1), ai_message_int1
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_ai



subroutine writelog_aa(destination, form, aa_message_char1, aa_message_char2)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aa_message_char1
  character(*), intent(in) :: aa_message_char2
  if (trim(form)=='') then
    write(display,*)trim(aa_message_char1), trim(aa_message_char2)
  else
    write(display,form)trim(aa_message_char1), trim(aa_message_char2)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aa



subroutine writelog_illll(destination, form, illll_message_int1, illll_message_logical1, illll_message_logical2, illll_message_logical3, illll_message_logical4)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  integer, intent(in) :: illll_message_int1
  logical, intent(in) :: illll_message_logical1
  logical, intent(in) :: illll_message_logical2
  logical, intent(in) :: illll_message_logical3
  logical, intent(in) :: illll_message_logical4
  if (trim(form)=='') then
    write(display,*)illll_message_int1, illll_message_logical1, illll_message_logical2, illll_message_logical3, illll_message_logical4
  else
    write(display,form)illll_message_int1, illll_message_logical1, illll_message_logical2, illll_message_logical3, illll_message_logical4
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_illll



subroutine writelog_af(destination, form, af_message_char1, af_message_float1)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: af_message_char1
  real*8, intent(in) :: af_message_float1
  if (trim(form)=='') then
    write(display,*)trim(af_message_char1), af_message_float1
  else
    write(display,form)trim(af_message_char1), af_message_float1
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_af



subroutine writelog_aia(destination, form, aia_message_char1, aia_message_int1, aia_message_char2)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aia_message_char1
  integer, intent(in) :: aia_message_int1
  character(*), intent(in) :: aia_message_char2
  if (trim(form)=='') then
    write(display,*)trim(aia_message_char1), aia_message_int1, trim(aia_message_char2)
  else
    write(display,form)trim(aia_message_char1), aia_message_int1, trim(aia_message_char2)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aia



subroutine writelog_ia(destination, form, ia_message_int1, ia_message_char1)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  integer, intent(in) :: ia_message_int1
  character(*), intent(in) :: ia_message_char1
  if (trim(form)=='') then
    write(display,*)ia_message_int1, trim(ia_message_char1)
  else
    write(display,form)ia_message_int1, trim(ia_message_char1)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_ia



subroutine writelog_fa(destination, form, fa_message_float1, fa_message_char1)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  real*8, intent(in) :: fa_message_float1
  character(*), intent(in) :: fa_message_char1
  if (trim(form)=='') then
    write(display,*)fa_message_float1, trim(fa_message_char1)
  else
    write(display,form)fa_message_float1, trim(fa_message_char1)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_fa



subroutine writelog_aaia(destination, form, aaia_message_char1, aaia_message_char2, aaia_message_int1, aaia_message_char3)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aaia_message_char1
  character(*), intent(in) :: aaia_message_char2
  integer, intent(in) :: aaia_message_int1
  character(*), intent(in) :: aaia_message_char3
  if (trim(form)=='') then
    write(display,*)trim(aaia_message_char1), trim(aaia_message_char2), aaia_message_int1, trim(aaia_message_char3)
  else
    write(display,form)trim(aaia_message_char1), trim(aaia_message_char2), aaia_message_int1, trim(aaia_message_char3)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aaia



subroutine writelog_aiaa(destination, form, aiaa_message_char1, aiaa_message_int1, aiaa_message_char2, aiaa_message_char3)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aiaa_message_char1
  integer, intent(in) :: aiaa_message_int1
  character(*), intent(in) :: aiaa_message_char2
  character(*), intent(in) :: aiaa_message_char3
  if (trim(form)=='') then
    write(display,*)trim(aiaa_message_char1), aiaa_message_int1, trim(aiaa_message_char2), trim(aiaa_message_char3)
  else
    write(display,form)trim(aiaa_message_char1), aiaa_message_int1, trim(aiaa_message_char2), trim(aiaa_message_char3)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aiaa



subroutine writelog_aiaia(destination, form, aiaia_message_char1, aiaia_message_int1, aiaia_message_char2, aiaia_message_int2, aiaia_message_char3)
  implicit none
  character(*),intent(in)    ::  destination
  character(*),intent(in)    ::  form
  character(len=slen) :: display
  character(*), intent(in) :: aiaia_message_char1
  integer, intent(in) :: aiaia_message_int1
  character(*), intent(in) :: aiaia_message_char2
  integer, intent(in) :: aiaia_message_int2
  character(*), intent(in) :: aiaia_message_char3
  if (trim(form)=='') then
    write(display,*)trim(aiaia_message_char1), aiaia_message_int1, trim(aiaia_message_char2), aiaia_message_int2, trim(aiaia_message_char3)
  else
    write(display,form)trim(aiaia_message_char1), aiaia_message_int1, trim(aiaia_message_char2), aiaia_message_int2, trim(aiaia_message_char3)
  endif
  ! this function passes the formatted log messages to the main logger
  call writelog_a(destination, '', trim(display))
end subroutine writelog_aiaia
